{
  "compilerOptions": {
		"target": "ES2022",
		// Вказує версію ECMAScript, до якої компілюватиметься TypeScript код.
		"useDefineForClassFields": true,
		// Додає підтримку для полів класів згідно з ES2022 стандартом. Це робить ініціалізацію полів класу сумісною з сучасною специфікацією JavaScript.
		"module": "ESNext",
		// Визначає модульну систему для компіляції. ESNext використовує останній стандарт модулів ECMAScript, корисно для сучасних інструментів збірки.
		"lib": ["ES2020", "DOM",],
		// Задає бібліотеки для типів, які TypeScript має використовувати під час перевірки коду:
		// - ES2020: підтримка для можливостей ECMAScript 2020.
		// - DOM: типи для об'єктів браузера, таких як document або window.
		"skipLibCheck": true,
		// Пропускає перевірку типів у бібліотечних файлах (файли .d.ts)

    /* Bundler mode */
		"moduleResolution": "bundler",
		// Вказує, що TypeScript повинен вирішувати модулі аналогічно до того, як це роблять інструменти збірки, такі як Webpack або Vite.
		"allowImportingTsExtensions": true,
		// Дозволяє імпорт файлів з розширенням .ts або .tsx прямо в коді. Наприклад, можна писати import { x } from './file.ts'.
		"isolatedModules": true,
		// Кожен файл обробляється як окремий модуль. Це корисно для сумісності з інструментами, які компілюють файли один за одним, наприклад Babel.
		"noEmit": true,
		// Запобігає генерації .js файлів після компіляції TypeScript. Корисно, якщо інший інструмент (наприклад, Webpack або Vite) займається створенням збірки.
		"jsx": "preserve",
		// Залишає JSX синтаксис без змін у вихідних файлах. Інший інструмент (наприклад, Babel) потім трансформує JSX у React createElement або інші рендер-функції (для Vue тощо).

    /* Linting */
		"strict": true,
		// Включає всі суворі опції перевірки типів у TypeScript, такі як noImplicitAny, strictNullChecks тощо.
		"noUnusedLocals": true,
		// Генерує помилки для локальних змінних, які були оголошені, але не використовуються.
		"noUnusedParameters": true,
		// Видає помилки для параметрів функцій, які не використовуються.
		"noFallthroughCasesInSwitch": true
		// Запобігає випадковому проходженню через кілька case в switch операторах.
  },
	"include": ["src/**/*.ts", "src/**/*.tsx", "src/**/*.vue"]
	// Вказує, які файли слід включати для компіляції.
}
